// generated from rosidl_adapter/resource/srv.idl.em
// with input from trident_msgs/srv/KalmanSensorService.srv
// generated code does not contain a copyright notice


module trident_msgs {
  module srv {
    @verbatim (language="comment", text=
      "The current state estimate (sent as a simple flat array and made into a column at the sensor node)")
    struct KalmanSensorService_Request {
      sequence<double> state;

      @verbatim (language="comment", text=
        "The covariance of the state estimate (sent flat and reconstructed using reshape, since it always has as many rows and columns as state has elements/rows)")
      sequence<double> covar;
    };
    @verbatim (language="comment", text=
      "The calculated residual (is flat and made into a column in position node, like the state)")
    struct KalmanSensorService_Response {
      sequence<double> residual;

      @verbatim (language="comment", text=
        "The kalman gain (reconstructed at destination, like covar. Should be reshaped with as many rows as there are residual elements, and as many columns as there are state elements (as far as i know))")
      sequence<double> gain;

      @verbatim (language="comment", text=
        "The observation matrix, calculated using the Jacobian (reconstructed like gain, but reversed, with x rows and y columns)")
      sequence<double> observationmatrix;
    };
  };
};
