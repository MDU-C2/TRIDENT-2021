// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('ref-napi');
const StructType = require('ref-struct-di')(ref);
const ArrayType = require('ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const StateRefStruct = StructType({
  x: primitiveTypes.float64,
  y: primitiveTypes.float64,
  z: primitiveTypes.float64,
  roll: primitiveTypes.float32,
  pitch: primitiveTypes.float32,
  heading: primitiveTypes.float32,
  velx: primitiveTypes.float32,
  vely: primitiveTypes.float32,
  velz: primitiveTypes.float32,
  velroll: primitiveTypes.float32,
  velpitch: primitiveTypes.float32,
  velheading: primitiveTypes.float32,
});
const StateRefArray = ArrayType(StateRefStruct);
const StateRefStructArray = StructType({
  data: StateRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class StateWrapper {
  constructor(other) {
    this._wrapperFields = {};
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new StateRefStruct(other._refObject.toObject());
      this._xIntialized = true;
      this._yIntialized = true;
      this._zIntialized = true;
      this._rollIntialized = true;
      this._pitchIntialized = true;
      this._headingIntialized = true;
      this._velxIntialized = true;
      this._velyIntialized = true;
      this._velzIntialized = true;
      this._velrollIntialized = true;
      this._velpitchIntialized = true;
      this._velheadingIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new StateRefStruct();
    this._xIntialized = false;
    this._yIntialized = false;
    this._zIntialized = false;
    this._rollIntialized = false;
    this._pitchIntialized = false;
    this._headingIntialized = false;
    this._velxIntialized = false;
    this._velyIntialized = false;
    this._velzIntialized = false;
    this._velrollIntialized = false;
    this._velpitchIntialized = false;
    this._velheadingIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new StateWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new StateArrayWrapper;
  }
  static get ArrayType() {
    return StateArrayWrapper;
  }
  static get refObjectArrayType() {
    return StateRefStructArray
  }
  static get refObjectType() {
    return StateRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._xIntialized) {
        throw new TypeError('Invalid argument: x in State');
      }
      if (!this._yIntialized) {
        throw new TypeError('Invalid argument: y in State');
      }
      if (!this._zIntialized) {
        throw new TypeError('Invalid argument: z in State');
      }
      if (!this._rollIntialized) {
        throw new TypeError('Invalid argument: roll in State');
      }
      if (!this._pitchIntialized) {
        throw new TypeError('Invalid argument: pitch in State');
      }
      if (!this._headingIntialized) {
        throw new TypeError('Invalid argument: heading in State');
      }
      if (!this._velxIntialized) {
        throw new TypeError('Invalid argument: velx in State');
      }
      if (!this._velyIntialized) {
        throw new TypeError('Invalid argument: vely in State');
      }
      if (!this._velzIntialized) {
        throw new TypeError('Invalid argument: velz in State');
      }
      if (!this._velrollIntialized) {
        throw new TypeError('Invalid argument: velroll in State');
      }
      if (!this._velpitchIntialized) {
        throw new TypeError('Invalid argument: velpitch in State');
      }
      if (!this._velheadingIntialized) {
        throw new TypeError('Invalid argument: velheading in State');
      }
    }
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._xIntialized = true;
    this._refObject.x = refObject.x;
    this._yIntialized = true;
    this._refObject.y = refObject.y;
    this._zIntialized = true;
    this._refObject.z = refObject.z;
    this._rollIntialized = true;
    this._refObject.roll = refObject.roll;
    this._pitchIntialized = true;
    this._refObject.pitch = refObject.pitch;
    this._headingIntialized = true;
    this._refObject.heading = refObject.heading;
    this._velxIntialized = true;
    this._refObject.velx = refObject.velx;
    this._velyIntialized = true;
    this._refObject.vely = refObject.vely;
    this._velzIntialized = true;
    this._refObject.velz = refObject.velz;
    this._velrollIntialized = true;
    this._refObject.velroll = refObject.velroll;
    this._velpitchIntialized = true;
    this._refObject.velpitch = refObject.velpitch;
    this._velheadingIntialized = true;
    this._refObject.velheading = refObject.velheading;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    StateWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'trident_msgs', subFolder: 'msg', interfaceName: 'State'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get x() {
    if (!this._xIntialized) {
      return undefined;
    }
    return this._refObject.x;
  }
  set x(value) {
    this._xIntialized = true;
    this._refObject.x = value;
  }
  get y() {
    if (!this._yIntialized) {
      return undefined;
    }
    return this._refObject.y;
  }
  set y(value) {
    this._yIntialized = true;
    this._refObject.y = value;
  }
  get z() {
    if (!this._zIntialized) {
      return undefined;
    }
    return this._refObject.z;
  }
  set z(value) {
    this._zIntialized = true;
    this._refObject.z = value;
  }
  get roll() {
    if (!this._rollIntialized) {
      return undefined;
    }
    return this._refObject.roll;
  }
  set roll(value) {
    this._rollIntialized = true;
    this._refObject.roll = value;
  }
  get pitch() {
    if (!this._pitchIntialized) {
      return undefined;
    }
    return this._refObject.pitch;
  }
  set pitch(value) {
    this._pitchIntialized = true;
    this._refObject.pitch = value;
  }
  get heading() {
    if (!this._headingIntialized) {
      return undefined;
    }
    return this._refObject.heading;
  }
  set heading(value) {
    this._headingIntialized = true;
    this._refObject.heading = value;
  }
  get velx() {
    if (!this._velxIntialized) {
      return undefined;
    }
    return this._refObject.velx;
  }
  set velx(value) {
    this._velxIntialized = true;
    this._refObject.velx = value;
  }
  get vely() {
    if (!this._velyIntialized) {
      return undefined;
    }
    return this._refObject.vely;
  }
  set vely(value) {
    this._velyIntialized = true;
    this._refObject.vely = value;
  }
  get velz() {
    if (!this._velzIntialized) {
      return undefined;
    }
    return this._refObject.velz;
  }
  set velz(value) {
    this._velzIntialized = true;
    this._refObject.velz = value;
  }
  get velroll() {
    if (!this._velrollIntialized) {
      return undefined;
    }
    return this._refObject.velroll;
  }
  set velroll(value) {
    this._velrollIntialized = true;
    this._refObject.velroll = value;
  }
  get velpitch() {
    if (!this._velpitchIntialized) {
      return undefined;
    }
    return this._refObject.velpitch;
  }
  set velpitch(value) {
    this._velpitchIntialized = true;
    this._refObject.velpitch = value;
  }
  get velheading() {
    if (!this._velheadingIntialized) {
      return undefined;
    }
    return this._refObject.velheading;
  }
  set velheading(value) {
    this._velheadingIntialized = true;
    this._refObject.velheading = value;
  }
  copyRefObject(refObject) {
    this._refObject = new StateRefStruct(refObject.toObject());
    this._xIntialized = true;
    this._yIntialized = true;
    this._zIntialized = true;
    this._rollIntialized = true;
    this._pitchIntialized = true;
    this._headingIntialized = true;
    this._velxIntialized = true;
    this._velyIntialized = true;
    this._velzIntialized = true;
    this._velrollIntialized = true;
    this._velpitchIntialized = true;
    this._velheadingIntialized = true;
  }
  copy(other) {
    this._refObject = new StateRefStruct(other._refObject.toObject());
    this._xIntialized = true;
    this._yIntialized = true;
    this._zIntialized = true;
    this._rollIntialized = true;
    this._pitchIntialized = true;
    this._headingIntialized = true;
    this._velxIntialized = true;
    this._velyIntialized = true;
    this._velzIntialized = true;
    this._velrollIntialized = true;
    this._velpitchIntialized = true;
    this._velheadingIntialized = true;
  }
  static get classType() {
    return StateWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"x","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"y","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"z","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"roll","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"pitch","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"heading","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"velx","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"vely","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"velz","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"velroll","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"velpitch","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"velheading","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"trident_msgs","type":"State","stringUpperBound":null,"isPrimitiveType":false},"msgName":"State"};
  }
  hasMember(name) {
    let memberNames = ["x","y","z","roll","pitch","heading","velx","vely","velz","velroll","velpitch","velheading"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class StateArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof StateWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new StateWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to StateArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to StateArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new StateRefArray(size);
    this._refObject = new StateRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new StateWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof StateArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "StateArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      StateWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return StateWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return StateArrayWrapper;
  }
}
module.exports = StateWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "x",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "y",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "z",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "roll",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "pitch",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "heading",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "velx",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "vely",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "velz",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "velroll",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "velpitch",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "velheading",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "trident_msgs",
    "type": "State",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "State"
}
*/
